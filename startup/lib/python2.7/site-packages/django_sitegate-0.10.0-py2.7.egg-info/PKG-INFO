Metadata-Version: 1.1
Name: django-sitegate
Version: 0.10.0
Summary: Reusable application for Django to ease sign up & sign in processes
Home-page: http://github.com/idlesign/django-sitegate
Author: Igor 'idle sign' Starikov
Author-email: idlesign@yandex.ru
License: UNKNOWN
Description: django-sitegate
        ===============
        http://github.com/idlesign/django-sitegate
        
        .. image:: https://badge.fury.io/py/django-sitegate.png
            :target: http://badge.fury.io/py/django-sitegate
        
        .. image:: https://pypip.in/d/django-sitegate/badge.png
                :target: https://crate.io/packages/django-sitegate
        
        .. image:: https://coveralls.io/repos/idlesign/django-sitegate/badge.png
            :target: https://coveralls.io/r/idlesign/django-sitegate
        
        .. image:: https://travis-ci.org/idlesign/django-sitegate.svg?branch=master
            :target: https://travis-ci.org/idlesign/django-sitegate
        
        
        What's that
        -----------
        
        *django-sitegate is a reusable application for Django to ease sign up & sign in processes.*
        
        This application will handle most common user registration and log in flows for you.
        
        **Sign in**
        
        * username/e-mail + password
        * username + password
        
        **Sign up**
        
        * username/e-mail + password
        * invitation code + username/e-mail + password
        * username + password
        * username + e-mail + password
        * username + password + password confirmation
        * username + e-mail + password + password confirmation
        
        
        Quick example
        -------------
        
        * Add the **sitegate** application to INSTALLED_APPS in your settings file (usually 'settings.py').
        * Make sure `TEMPLATE_CONTEXT_PROCESSORS` in your settings file has `django.core.context_processors.request`.
        
        Here follows the most straightforward way possible with ``django-sitegate`` to have both sign up & sign in
        functionality on your page.
        
        
        1. Use ``sitegate_view`` decorator to mark your view as the one handling both signups and signins:
        
            .. code-block:: python
        
                from django.shortcuts import render
        
                from sitegate.decorators import sitegate_view
        
                @sitegate_view  # This also prevents logged in users from accessing our sign in/sign up page.
                def entrance(request):
                    return render(request, 'entrance.html', {'title': 'Sign in & Sign up'})
        
        
        2. Then in your template load ``sitegate`` tag library and put ``sitegate_signup_form`` & ``sitegate_signin_form`` tags
           in place where you want a registration and sign in forms to be.
        
            .. code-block:: html
        
                {% extends "_base.html" %}
                {% load sitegate %}
        
                {% block page_contents %}
                    <div class="my_signin_block">
                        {% sitegate_signin_form %}
                    </div>
                    <div class="my_signup_block">
                        {% sitegate_signup_form %}
                    </div>
                {% endblock %}
        
        
        You're done. Now your site visitors have an e-mail + password form to register and username/e-mail + password form to log in.
        
        And mind that we've barely made a scratch of **sitegate**.
        
        
        
        Documentation
        -------------
        
        http://django-sitegate.readthedocs.org/
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
